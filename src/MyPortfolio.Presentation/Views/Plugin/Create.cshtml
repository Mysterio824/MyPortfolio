@model MyPortfolio.Presentation.Models.PluginCreateViewModel
@{
    ViewData["Title"] = "Add Project";
}

<div class="container">
    <h1 class="mb-4">Add New Project</h1>
    
    <div class="row">
        <div class="col-md-8">
            <div class="card shadow-sm">
                <div class="card-body">
                    <form asp-action="Create" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        
                        <div class="form-group mb-3">
                            <label asp-for="Title" class="form-label"></label>
                            <input asp-for="Title" class="form-control" />
                            <span asp-validation-for="Title" class="text-danger"></span>
                        </div>
                        
                        <div class="form-group mb-3">
                            <label asp-for="Description" class="form-label"></label>
                            <textarea asp-for="Description" class="form-control" rows="5"></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>
                        
                        <div class="form-group mb-3">
                            <label asp-for="ImageUrl" class="form-label"></label>
                            <input asp-for="ImageUrl" class="form-control" />
                            <span asp-validation-for="ImageUrl" class="text-danger"></span>
                            <small class="form-text text-muted">Optional. URL to project image/screenshot.</small>
                        </div>
                        
                        <div class="form-group mb-3">
                            <label asp-for="GitHubUrl" class="form-label"></label>
                            <input asp-for="GitHubUrl" class="form-control" />
                            <span asp-validation-for="GitHubUrl" class="text-danger"></span>
                            <small class="form-text text-muted">Optional. Link to GitHub repository.</small>
                        </div>
                        
                        <div class="form-group mb-3">
                            <label asp-for="LiveDemoUrl" class="form-label"></label>
                            <input asp-for="LiveDemoUrl" class="form-control" />
                            <span asp-validation-for="LiveDemoUrl" class="text-danger"></span>
                            <small class="form-text text-muted">Optional. Link to live demo or deployed site.</small>
                        </div>
                        
                        <div class="form-group mb-3">
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <label asp-for="Technologies" class="form-label mb-0"></label>
                                <button type="button" class="btn btn-sm btn-primary" id="addTechnology">
                                    <i class="bi bi-plus"></i> Add Technology
                                </button>
                            </div>
                            <div id="technologiesContainer">
                                @if (Model.Technologies.Any())
                                {
                                    @for (int i = 0; i < Model.Technologies.Count; i++)
                                    {
                                        <div class="input-group mb-2 technology-item">
                                            <input type="text" name="Technologies[@i]" class="form-control" value="@Model.Technologies[i]" />
                                            <button type="button" class="btn btn-outline-danger remove-item">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <div class="input-group mb-2 technology-item">
                                        <input type="text" name="Technologies[0]" class="form-control" placeholder="Enter technology" />
                                        <button type="button" class="btn btn-outline-danger remove-item">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </div>
                                }
                            </div>
                            <span asp-validation-for="Technologies" class="text-danger"></span>
                            <small class="form-text text-muted">Required. Add technologies used in this project.</small>
                        </div>
                        
                        <div class="form-group mb-4">
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <label asp-for="Features" class="form-label mb-0"></label>
                                <button type="button" class="btn btn-sm btn-primary" id="addFeature">
                                    <i class="bi bi-plus"></i> Add Feature
                                </button>
                            </div>
                            <div id="featuresContainer">
                                @if (Model.Features.Any())
                                {
                                    @for (int i = 0; i < Model.Features.Count; i++)
                                    {
                                        <div class="input-group mb-2 feature-item">
                                            <input type="text" name="Features[@i]" class="form-control" value="@Model.Features[i]" />
                                            <button type="button" class="btn btn-outline-danger remove-item">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </div>
                                    }
                                }
                            </div>
                            <span asp-validation-for="Features" class="text-danger"></span>
                            <small class="form-text text-muted">Optional. Add key features of this project.</small>
                        </div>
                        
                        <div class="form-group text-end">
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-plus-circle"></i> Create Project
                            </button>
                            <a asp-controller="Projects" asp-action="Index" class="btn btn-outline-secondary">Cancel</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        
        <div class="col-md-4">
            <div class="card shadow-sm mb-4">
                <div class="card-body">
                    <h5 class="card-title">Creating a New Project</h5>
                    <p class="card-text">
                        This form allows you to add a new project to your portfolio. The project data will be compiled into a plugin (DLL) 
                        that can be loaded by the application.
                    </p>
                    <p class="card-text">
                        <strong>Required fields:</strong>
                    </p>
                    <ul class="card-text">
                        <li>Title</li>
                        <li>Description</li>
                        <li>At least one Technology</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function () {
            // Add technology
            $("#addTechnology").click(function () {
                const index = $(".technology-item").length;
                const newItem = `
                    <div class="input-group mb-2 technology-item">
                        <input type="text" name="Technologies[${index}]" class="form-control" placeholder="Enter technology" />
                        <button type="button" class="btn btn-outline-danger remove-item">
                            <i class="bi bi-trash"></i>
                        </button>
                    </div>
                `;
                $("#technologiesContainer").append(newItem);
            });

            // Add feature
            $("#addFeature").click(function () {
                const index = $(".feature-item").length;
                const newItem = `
                    <div class="input-group mb-2 feature-item">
                        <input type="text" name="Features[${index}]" class="form-control" placeholder="Enter feature" />
                        <button type="button" class="btn btn-outline-danger remove-item">
                            <i class="bi bi-trash"></i>
                        </button>
                    </div>
                `;
                $("#featuresContainer").append(newItem);
            });

            // Remove item (works for both technology and feature)
            $(document).on("click", ".remove-item", function () {
                // Don't remove if it's the last technology item
                if ($(this).closest(".technology-item").length > 0 && $(".technology-item").length <= 1) {
                    // Clear the value instead of removing
                    $(this).closest(".input-group").find("input").val("");
                    return;
                }
                
                $(this).closest(".input-group").remove();
                
                // Reindex the remaining items
                reindexItems("#technologiesContainer", "Technologies");
                reindexItems("#featuresContainer", "Features");
            });

            // Function to reindex items after removal
            function reindexItems(container, fieldName) {
                $(container + " .input-group").each(function (index) {
                    const input = $(this).find("input");
                    input.attr("name", `${fieldName}[${index}]`);
                });
            }
        });
    </script>
} 